## Mixed effects model: Incorrect
formula_wrong <- as.formula(paste0(main_eff,
paste("W", covars_fix, sep=":", collapse=" + "),
" + (W | S)"))
mod_wrong <- lmer(formula_wrong, data=train_dat,
control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=10000)))
sum_wrong <- summary(mod_wrong)
#manual PI
res_wrong <- matrix_var(mod_wrong)
manual_train_wrong <- manual_pi_train(train_dat, res_wrong, K, covars_fix, c())
manual_target_wrong <- manual_pi_target(target_dat, res_wrong, K, covars_fix, c())
manual_res_wrong <- assess_interval(manual_train_wrong, manual_target_wrong)
## Causal Forest
if ("age2" %in% covars_fix) {
covars <- c("sex", "smstat", "weight", "age2", "madrs")
} else {
covars <- c("sex", "smstat", "weight", "age", "madrs")
}
feat <- dplyr::select(train_dat, c(S, all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
tau_forest <- grf::causal_forest(X=feat, Y=train_dat$Y, W=train_dat$W,
num.threads=3, honesty=T, num.trees=1000)
tau_hat <- predict(tau_forest, estimate.variance=T)
#causal forest CI - training
cf_train <- cf_ci(train_dat, tau_hat)
#causal forest CI - target
#random
rand_target <- impute_rand(1000, target_dat, tau_forest, covars)
#study membership model
mem_target <- impute_mem(1000, train_dat, target_dat, tau_forest, covars)
#within-forest default
default_target <- impute_default(K, target_dat, tau_forest, covars)
#calculate mean and CIs for individuals and assess accuracy
rand_res <- assess_interval(cf_train, rand_target)
mem_res <- assess_interval(cf_train, mem_target)
default_res <- assess_interval(cf_train, default_target)
## Adaptive Causal Forest
tau_forest_a <- grf::causal_forest(X=feat, Y=train_dat$Y, W=train_dat$W,
num.threads=3, honesty=F, num.trees=1000)
tau_hat_a <- predict(tau_forest_a, estimate.variance=T)
#causal forest CI - training
cf_train_a <- cf_ci(train_dat, tau_hat_a)
#causal forest CI - target
#random
rand_target_a <- impute_rand(1000, target_dat, tau_forest_a, covars)
#study membership model
mem_target_a <- impute_mem(1000, train_dat, target_dat, tau_forest_a, covars)
#within-forest default
default_target_a <- impute_default(K, target_dat, tau_forest_a, covars)
#calculate mean and CIs for individuals and assess accuracy
rand_a_res <- assess_interval(cf_train_a, rand_target_a)
mem_a_res <- assess_interval(cf_train_a, mem_target_a)
default_a_res <- assess_interval(cf_train_a, default_target_a)
## Save results
#data frame of parameters
params <- data.frame(K=K, n_mean=n_mean, n_sd=n_sd, n_target=n_target,
covars_fix=paste(covars_fix, collapse = ", "),
covars_rand=paste(covars_rand, collapse = ", "), lin=lin,
eps_study_m=eps_study_m, eps_study_tau=eps_study_tau,
eps_study_inter=paste(eps_study_inter, collapse = ", "),
distribution=distribution, target_dist=target_dist)
#data frame of results
all_res <- cbind(manual_res, manual_res_wrong, rand_res, mem_res, default_res,
rand_a_res, mem_a_res, default_a_res) %>%
data.frame() %>%
rownames_to_column("Metric") %>%
cbind(params)
View(all_res)
library(tidyverse)
library(lme4)
library(rsample)
library(multcomp)
library(MASS)
library(grf)
source("R/MDD_Generation_OOSEst.R")
source("R/MA_OOSEst.R")
source("R/Bootstrap_OOSEst.R")
source("R/Comparing_OOSEst.R")
# set up parameters
K <- 10
n_mean <- 500
n_sd <- 0
n_target <- 100
honesty <- T
covars <- list(list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(covars)),
distribution = c("same", "varying_madrs", "halfdiff_madrsage", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
settings
settings <- expand.grid(moderators = c(1:length(covars)),
distribution = c("same", "varying_madrs", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
nrow(settigs)
nrow(settings)
i=10
moderators <- settings$moderators[i]
covars_fix <- covars[[moderators]]$covars_fix
covars_rand <- covars[[moderators]]$covars_rand
eps_study_m <- covars[[moderators]]$eps_study_m
eps_study_tau <- covars[[moderators]]$eps_study_tau
eps_study_inter <- covars[[moderators]]$eps_study_inter
lin <- covars[[moderators]]$lin
distribution <- settings$distribution[i]
target_dist <- settings$target_dist[i]
iteration <- settings$iteration[i]
seed <- i
#run main function
set.seed(seed)
results <- compare_oos(K=K, n_mean=n_mean, n_sd=n_sd, n_target=n_target, covars_fix=covars_fix,
covars_rand=covars_rand, lin=lin, eps_study_m=eps_study_m, eps_study_tau=eps_study_tau,
eps_study_inter=eps_study_inter, distribution=distribution, target_dist=target_dist)
all_res
results
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#read in all files
setwd("~/Desktop/Cluster/OOSEst/30Aug2023")
files <- list.files(pattern=".Rdata")
all <- c()
for (i in 1:length(files)) {
load(file = files[i])
all <- bind_rows(all, results)
print(i)
}
#checking output
seeds <- strsplit(files,"_") %>% map_chr(.f=function(x) x[2])
length(unique(seeds)) == length(files) #making sure every iteration has a unique seed
nrow(all) #to make sure every iteration ran
setwd("~/Dropbox/Moderation/Out of Sample Prediction/Data")
saveRDS(all, "all_results_30Aug2023.RDS")
mean_sd <- function(x) {
return(paste(mean(x), sd(x), sep=" "))
}
#average across iterations
all_avg <- all %>%
group_by(Metric, K, n_mean, n_sd, n_target, eps_study_m,
eps_study_tau, eps_study_age, distribution, target_dist) %>%
summarise(across(glht_res:boot_res_wrong, ~ mean_sd(.x)),
n_iter = n())
View(all)
head(all)
#average across iterations
all_avg <- all %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:default_a_res, ~ mean_sd(.x)),
n_iter = n())
summary(all_avg$n_iter) #check iterations
head(all_avg)
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("wrong", Method)==T, "Incorrectly Specified", "Correctly Specified"),
model = ifelse(grepl("glht", Method)==T, "GLHT",
ifelse(grepl("manual", Method)==T, "Manual", "Boot")))
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) -> a
unique(a$Method)
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m))
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec))
all_long
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method))
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method)) +
geom_jitter(aes(shape=Method), size=2.5, width=.2, height=0)
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("_a_", Method)==T, "Adaptive", "Honest"),
model = case_when(grepl("manual", Method)==T ~ "Meta-Analysis",
grepl("mem", Method)==T ~ "CF w/ Membership",
grepl("rand", Method)==T ~ "CF Random",
grepl("default", Method)==T ~ "CF Default"))
View(all_long)
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("manual", Method)==T, NA, ifelse(
grepl("_a_", Method)==T, "Adaptive", "Honest")),
model = case_when(grepl("manual", Method)==T ~ "Meta-Analysis",
grepl("mem", Method)==T ~ "CF w/ Membership",
grepl("rand", Method)==T ~ "CF Random",
grepl("default", Method)==T ~ "CF Default"))
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=Method)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=Method)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=Method)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=Method)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("manual", Method)==T, "MA", ifelse(
grepl("_a_", Method)==T, "Adaptive", "Honest")),
model = case_when(grepl("manual", Method)==T ~ "Meta-Analysis",
grepl("mem", Method)==T ~ "CF w/ Membership",
grepl("rand", Method)==T ~ "CF Random",
grepl("default", Method)==T ~ "CF Default"))
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=Method)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution") + ylim(.75,1)
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution") +
ylim(.75, 1)
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) + ylim(.75, 1) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) + ylim(75, 100) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
?scale_y_continuous
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=model)) +
geom_jitter(aes(shape=spec), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
all_long %>%
filter(Metric == "target_coverage") %>%
group_by(Method, model, spec) %>%
summarise(Mean=mean(Mean)) %>%
ggplot(aes(x=model, y=Mean, group=1, color=spec)) +
geom_point(size=5) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.margin=margin(10,10,10,30),
text = element_text(size=15)) +
labs(color="Single-Study Approach") +
xlab("Aggregation Approach") +
scale_y_continuous(labels = scales::percent)
all_long %>%
filter(Metric == "target_length",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("Mean CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("Mean CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_mse",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_mse",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
