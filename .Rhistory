qt(.025)
qt(.025, df=1)
qt(.025, df=999)
library(tidyverse)
library(causalToolbox)
library(rsample)
library(rpart)
library(ranger)
library(glmnet)
library(grf)
library(fastDummies)
library(lme4)
library(nnet)
source("Comparing_methods_functions.R")
source("Simulation_MLOptions.R")
## Simulate dataset
K <- 10
sim_dat <- gen_data(K=K, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0,
study_sd=.5, study_inter_sd=0, scenario="1a")
covars <- grep("^X", names(sim_dat), value=TRUE)
feat <- select(sim_dat, c(S,all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
feat_nostudy <- select(sim_dat, all_of(covars))
tr <- sim_dat$W
y <- sim_dat$Y
tau_true <- sim_dat$tau
## Fit models (for now, causal forest with pooling with trial indicator)
tau_forest <- causal_forest(X=feat, Y=y, W=tr, num.threads=3, honesty=F, num.trees=1000)
tau_hat <- predict(tau_forest)$predictions
## Define new sample grid
N <- 100
new <- expand.grid(X1=seq(0, 3, by=1),
X2=seq(0, 3, by=1),
X3=seq(0, 3, by=1),
X4=seq(0, 3, by=1),
X5=seq(0, 3, by=1))
#assign study
new_rand <- new %>%
slice(rep(1:n(), each=N)) %>%
mutate(S = sample(1:K, nrow(new)*N, replace = T)) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
#predict CATE
new_rand$tau_hat <- predict(tau_forest, newdata = new_rand)$predictions
#create confidence intervals
new_rand_sum <- new_rand %>%
group_by(X1,X2,X3,X4,X5) %>%
summarise(mean = mean(tau_hat),
sd = sd(tau_hat)) %>%
mutate(lower = mean + qt(.025, df=N-1)*sd/sqrt(N),
upper = mean + qt(.975, df=N-1)*sd/sqrt(N))
#should I include the outcome? Then will need to simulate Y in the new dataset
mem_mod <- multinom(S ~ X1 + X2 + X3 + X4 + X5, data=sim_dat)
summary(mem_mod)
#define probabilities
mem_probs <- predict(mem_mod, newdata = new, type = "probs")
S_mem <- c()
for (i in 1:nrow(mem_probs)) {
S_mem <- c(S_mem, sample(1:K, N, replace=T, prob=mem_probs[i,]))
}
mem_probs
#assign study
new_mem <- new %>%
slice(rep(1:n(), each=N)) %>%
mutate(S = S_mem) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
#predict CATE
new_mem$tau_hat <- predict(tau_forest, newdata = new_mem)$predictions
#create confidence intervals
new_mem_sum <- new_mem %>%
group_by(X1,X2,X3,X4,X5) %>%
summarise(mean = mean(tau_hat),
sd = sd(tau_hat)) %>%
mutate(lower = mean + qt(.025, df=N-1)*sd/sqrt(N),
upper = mean + qt(.975, df=N-1)*sd/sqrt(N))
View(new)
nrow(new)
length(S_mem)
#define probabilities
mem_probs <- predict(mem_mod, newdata = new, type = "probs")
S_mem <- c()
i=1
sample(1:K, N, replace=T, prob=mem_probs[i,])
mem_probs[i,]
mem_probs %>% head()
new %>%
slice(rep(1:n(), each=N))
new[i,]
mem_probs <- predict(mem_mod, newdata = new, type = "probs")
S_mem <- c()
for (i in 1:nrow(mem_probs)) {
S_mem <- c(S_mem, sample(1:K, N, replace=T, prob=mem_probs[i,]))
}
#assign study
new_mem <- new %>%
slice(rep(1:n(), each=N)) %>%
mutate(S = S_mem) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
#predict CATE
new_mem$tau_hat <- predict(tau_forest, newdata = new_mem)$predictions
#create confidence intervals
new_mem_sum <- new_mem %>%
group_by(X1,X2,X3,X4,X5) %>%
summarise(mean = mean(tau_hat),
sd = sd(tau_hat)) %>%
mutate(lower = mean + qt(.025, df=N-1)*sd/sqrt(N),
upper = mean + qt(.975, df=N-1)*sd/sqrt(N))
new
#assign study
new_default <- new %>%
mutate(S = NA)
new_default
mutate(S = factor(NA, levels=1:10)
#assign study
new_default <- new %>%
#assign study
new_default <- new %>%
mutate(S = factor(NA, levels=1:10))
new_default
#assign study
new_default <- new %>%
mutate(S = factor(NA, levels=1:10)) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
new_default
#assign study
new_default <- new %>%
mutate(S = factor(NA, levels=1:10)) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T, ignore_na = T)
new_default
sim_dat
feat
predict(tau_forest, newdata = new_default)
%>% head()
predict(tau_forest, newdata = new_default) %>% head()
?predict.causal_forest
#predict CATE
cate_default <- predict(tau_forest, newdata = new_default, estimate.variance = T)
head(cate_default)
new_default$tau_hat <- cate_default$predictions
nrow(new_default)
nrow(cate_default)
#assign study
new_default <- new %>%
slice(rep(1:n(), each=N)) %>%
mutate(S = factor(NA, levels=1:10)) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T, ignore_na = T)
#predict CATE
cate_default <- predict(tau_forest, newdata = new_default, estimate.variance = T)
head(cate_default)
qt(.025, df=N-1)
#assign study
#we don't need to replicate because we will get the same prediction each time
new_default <- new %>%
mutate(S = factor(NA, levels=1:10)) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T, ignore_na = T)
#predict CATE
cate_default <- predict(tau_forest, newdata = new_default, estimate.variance = T)
new_default$tau_hat <- cate_default$predictions
head(new_default)
new_default$sd <- sqrt(cate_default$variance.estimates)
head(new_default)
new_default$mean <- cate_default$predictions
#create confidence intervals
new_default_sum <- new_default %>%
mutate(lower = mean + qt(.025, df=N-1)*sd/sqrt(N),
upper = mean + qt(.975, df=N-1)*sd/sqrt(N))
new_default_sum
