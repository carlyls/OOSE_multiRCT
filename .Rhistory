xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), type = "dashed") +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#plot target coverage
all_long %>%
filter(Metric == "target_coverage") %>%
group_by(Method, model, spec) %>%
summarise(Mean=mean(Mean)) %>%
ggplot(aes(x=model, y=Mean, group=1, color=spec)) +
geom_point(size=5) +
theme(axis.text.x = element_text(angle=45, hjust=1, vjust=1),
plot.margin=margin(10,10,10,30),
text = element_text(size=15)) +
labs(color="Single-Study Approach") +
xlab("Aggregation Approach") +
scale_y_continuous(labels = scales::percent)
all_long %>%
filter(Metric == "train_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Training Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
ylim(0, 10) +
facet_grid(lin~distribution) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_mse",
target_dist == "same",
covars_fix == "age") %>%
ggplot(aes(x=sds, y=Value, group=Method, color=Method)) +
geom_boxplot() +
facet_grid(lin~distribution) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_mse",
target_dist == "same",
covars_fix == "age") %>%
ggplot(aes(x=sds, y=Value, group=Method, color=Method)) +
geom_boxplot() + ylim(0,5) +
facet_grid(lin~distribution) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age, madrs",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution, Age and MADRS")
unique(all_long$covars_fix)
unique(all_long$covars_rand)
library(tidyverse)
library(lme4)
library(rsample)
library(multcomp)
library(MASS)
library(grf)
library(dbarts)
library(fastDummies)
source("R/MDD_Generation_OOSEst.R")
source("R/MA_OOSEst.R")
source("R/Bootstrap_OOSEst.R")
source("R/BART_OOSEst.R")
source("R/Comparing_OOSEst.R")
# set up parameters
K <- 10
n_mean <- 500
n_sd <- 0
n_target <- 100
honesty <- T
mods <- list(list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(mods)),
distribution = c("same", "varying_madrs", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
i=1
moderators <- settings$moderators[i]
covars_fix <- mods[[moderators]]$covars_fix
covars_rand <- mods[[moderators]]$covars_rand
eps_study_m <- mods[[moderators]]$eps_study_m
eps_study_tau <- mods[[moderators]]$eps_study_tau
eps_study_inter <- mods[[moderators]]$eps_study_inter
lin <- mods[[moderators]]$lin
distribution <- settings$distribution[i]
target_dist <- settings$target_dist[i]
iteration <- settings$iteration[i]
seed <- i
#run main function
set.seed(seed)
## Simulate training and target (OOS) data
sim_dat <- gen_mdd(K, n_mean, n_sd, n_target, covars_fix, covars_rand, lin,
eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist)
train_dat <- sim_dat[["train_dat"]]
target_dat <- sim_dat[["target_dat"]]
## Mixed effects model: Correct
#change for scenario with age^2
if ("age2" %in% covars_fix) {
main_eff <- "Y ~ madrs + sex + age2 + W + "
} else {
main_eff <- "Y ~ madrs + sex + age + W + "
}
formula <- as.formula(paste0(main_eff,
paste("W", covars_fix, sep=":", collapse=" + "),
" + (W + ",
paste("W", covars_rand, sep=":", collapse=" + "),
" | S)"))
mod <- lmer(formula, data=train_dat,
control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=10000)))
sum <- summary(mod)
#manual PI
res <- matrix_var(mod)
manual_train <- manual_pi_train(train_dat, res, K, covars_fix, covars_rand)
manual_target <- manual_pi_target(target_dat, res, K, covars_fix, covars_rand)
manual_res <- assess_interval(manual_train, manual_target)
manual_res
## Mixed effects model: Incorrect
formula_wrong <- as.formula(paste0(main_eff,
paste("W", covars_fix, sep=":", collapse=" + "),
" + (W | S)"))
mod_wrong <- lmer(formula_wrong, data=train_dat,
control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=10000)))
sum_wrong <- summary(mod_wrong)
#manual PI
res_wrong <- matrix_var(mod_wrong)
manual_train_wrong <- manual_pi_train(train_dat, res_wrong, K, covars_fix, c())
manual_target_wrong <- manual_pi_target(target_dat, res_wrong, K, covars_fix, c())
manual_res_wrong <- assess_interval(manual_train_wrong, manual_target_wrong)
## Causal Forest
if ("age2" %in% covars_fix) {
covars <- c("sex", "smstat", "weight", "age2", "madrs")
} else {
covars <- c("sex", "smstat", "weight", "age", "madrs")
}
feat <- dplyr::select(train_dat, c(S, all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
tau_forest <- grf::causal_forest(X=feat, Y=train_dat$Y, W=train_dat$W,
num.threads=3, honesty=T, num.trees=1000)
tau_hat <- predict(tau_forest, estimate.variance=T)
#causal forest CI - training
cf_train <- cf_ci(train_dat, tau_hat)
#causal forest CI - target
cf_target <- impute_rand(1000, K, target_dat, tau_forest, covars)
rm(tau_forest)
#calculate mean and CIs for individuals and assess accuracy
cf_res <- assess_interval(cf_train, cf_target)
## Adaptive Causal Forest
tau_forest_a <- grf::causal_forest(X=feat, Y=train_dat$Y, W=train_dat$W,
num.threads=3, honesty=F, num.trees=1000)
tau_hat_a <- predict(tau_forest_a, estimate.variance=T)
#causal forest CI - training
cf_train_a <- cf_ci(train_dat, tau_hat_a)
#causal forest CI - target
cf_target_a <- impute_rand(1000, K, target_dat, tau_forest_a, covars)
rm(tau_forest_a)
#calculate mean and CIs for individuals and assess accuracy
cf_a_res <- assess_interval(cf_train_a, cf_target_a)
## BART: S-learner
#use covariates from above
#update features to include W
feat <- dplyr::select(train_dat, c(W, S, all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
#include counterfactual covariates (swap control and treatment)
feat_cf <- feat %>%
mutate(W = as.numeric(W == 0))
y <- as.numeric(train_dat$Y)
#run bart
sbart <- dbarts::bart(x.train=as.matrix(feat), y.train=y, x.test=as.matrix(feat_cf), keeptrees=T)
#S-BART credible interval - training
sb_train <- sbart_ci(train_dat, sbart)
#S-BART credible interval - target
sb_target <- sbart_target(K, target_dat, sbart, covars)
rm(sbart)
#calculate mean and CIs for individuals and assess accuracy
sb_res <- assess_interval(sb_train, sb_target)
## BART: T-learner
#use covariates from above
m1_setup <- tlearn_setup(train_dat, covars, w=1)
m0_setup <- tlearn_setup(train_dat, covars, w=0)
#run bart for m1
tbart1 <- dbarts::bart(x.train = as.matrix(m1_setup[["feat"]]), y.train = m1_setup[["y"]],
x.test = as.matrix(m0_setup[["feat"]]), keeptrees = T)
#run bart for m0
tbart0 <- dbarts::bart(x.train = as.matrix(m0_setup[["feat"]]), y.train = m0_setup[["y"]],
x.test = as.matrix(m1_setup[["feat"]]), keeptrees = T)
#T-BART credible interval - training
tb_train <- tbart_ci(train_dat, tbart1, tbart0)
#T-BART credible interval - target
tb_target <- tbart_target(K, target_dat, tbart1, tbart0, covars)
rm(tbart1)
rm(tbart0)
#calculate mean and CIs for individuals and assess accuracy
tb_res <- assess_interval(tb_train, tb_target)
## Save results
#data frame of parameters
params <- data.frame(K=K, n_mean=n_mean, n_sd=n_sd, n_target=n_target,
covars_fix=paste(covars_fix, collapse = ", "),
covars_rand=paste(covars_rand, collapse = ", "), lin=lin,
eps_study_m=eps_study_m, eps_study_tau=eps_study_tau,
eps_study_inter=paste(eps_study_inter, collapse = ", "),
distribution=distribution, target_dist=target_dist)
#data frame of results
all_res <- cbind(manual_res, manual_res_wrong, cf_res, cf_a_res, sb_res, tb_res) %>%
data.frame() %>%
rownames_to_column("Metric") %>%
cbind(params)
View(all_res)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
all <- readRDS("Data/all_results_26Sep2023.RDS")
#long form for boxplot
all_long <- all %>%
pivot_longer(cols = manual_res:tb_res,
names_to = "Method",
values_to = "Value") %>%
mutate(scenario = paste(covars_fix, covars_rand, lin, eps_study_m,
eps_study_tau, eps_study_inter, sep = "_"),
sds = paste(eps_study_m, eps_study_tau, eps_study_inter, sep = "_"))
#average across iterations
all_avg <- all %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:tb_res, list(mean = mean, sd = sd)),
n_iter = n())
summary(all_avg$n_iter) #check iterations
#age, same target distribution
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same", distribution == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_wrap(~lin) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same", distribution == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_wrap(~lin) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "train_coverage", covars_fix == "age",
target_dist == "same", distribution == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_wrap(~lin) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Training Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same", distribution == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
geom_hline(aes(yintercept=.95), linetype = "dashed") +
facet_wrap(~lin) + ylim(0,10) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
#age, same target distribution
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same", distribution == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(~lin) + ylim(0,10) +
labs(color="Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
mods[5]
i=5
# set up parameters
K <- 10
n_mean <- 500
n_sd <- 0
n_target <- 100
honesty <- T
mods <- list(list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(mods)),
distribution = c("same", "varying_madrs", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
moderators <- settings$moderators[i]
covars_fix <- mods[[moderators]]$covars_fix
covars_rand <- mods[[moderators]]$covars_rand
eps_study_m <- mods[[moderators]]$eps_study_m
eps_study_tau <- mods[[moderators]]$eps_study_tau
eps_study_inter <- mods[[moderators]]$eps_study_inter
lin <- mods[[moderators]]$lin
distribution <- settings$distribution[i]
target_dist <- settings$target_dist[i]
iteration <- settings$iteration[i]
seed <- i
covars_fi
covars_fix
## Simulate training and target (OOS) data
sim_dat <- gen_mdd(K, n_mean, n_sd, n_target, covars_fix, covars_rand, lin,
eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist)
train_dat <- sim_dat[["train_dat"]]
target_dat <- sim_dat[["target_dat"]]
nrow_train_dat
nrow(train_dat)
## Mixed effects model: Correct
#change for scenario with age^2
if ("age2" %in% covars_fix) {
main_eff <- "Y ~ madrs + sex + age2 + W + "
} else {
main_eff <- "Y ~ madrs + sex + age + W + "
}
formula <- as.formula(paste0(main_eff,
paste("W", covars_fix, sep=":", collapse=" + "),
" + (W + ",
paste("W", covars_rand, sep=":", collapse=" + "),
" | S)"))
mod <- lmer(formula, data=train_dat,
control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=10000)))
sum <- summary(mod)
#manual PI
res <- matrix_var(mod)
manual_train <- manual_pi_train(train_dat, res, K, covars_fix, covars_rand)
manual_target <- manual_pi_target(target_dat, res, K, covars_fix, covars_rand)
manual_res <- assess_interval(manual_train, manual_target)
results <- compare_oos(K=K, n_mean=n_mean, n_sd=n_sd, n_target=n_target, covars_fix=covars_fix,
covars_rand=covars_rand, lin=lin, eps_study_m=eps_study_m, eps_study_tau=eps_study_tau,
eps_study_inter=eps_study_inter, distribution=distribution, target_dist=target_dist)
save(results, file=paste(paste("results",seed,iteration,K,n_mean,n_sd,n_target,"modset",moderators,
lin,eps_study_m,eps_study_tau,eps_study_inter,distribution,
target_dist,sep = "_"),
".Rdata",sep=""))
paste(paste("results",seed,iteration,K,n_mean,n_sd,n_target,"modset",moderators,
lin,eps_study_m,eps_study_tau,eps_study_inter,distribution,
target_dist,sep = "_"),
".Rdata",sep="")
moderators
seed
iteration
K
n_mean
n_sd
n_target
lin
eps_study_m
eps_study_tau
eps_study_inter
distribution
paste(paste("results",seed,iteration,K,n_mean,n_sd,n_target,"modset",moderators,
lin,eps_study_m,eps_study_tau,mean(eps_study_inter),distribution,
target_dist,sep = "_"),
".Rdata",sep="")
mean(.05)
