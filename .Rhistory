dat <- sample_dist(k, n, Sigma, eps_study_m, eps_study_tau,
eps_study_inter, covars_rand, distribution)
train_dat <- bind_rows(train_dat, dat)
}
train_dat
#target data
if (target_dist == "same") {
target_dat <- train_dat[sample(nrow(train_dat), n_target),] %>%
dplyr::select(-S, -contains("eps_"))
} else if (target_dist == "upweight") {
train_weight <- train_dat %>%
mutate(study_weight = ifelse(S %in% c(3, 5), 3, 1))
target_dat <- train_weight[sample(nrow(train_weight), n_target, prob=train_weight$study_weight),] %>%
dplyr::select(-study_weight, -S, -contains("eps_"))
} else if (target_dist == "different") {
target_mean <- c(age=30, sex=0.6784, smstat=0.3043, weight=79.0253, madrs=25)
target_dat <- MASS::mvrnorm(n=n_target, mu=target_mean, Sigma=Sigma) %>%
as.data.frame() %>%
mutate(sex = ifelse(sex > 1-0.6784, 1, 0),
smstat = ifelse(smstat > 1-0.3043, 1, 0),
age2 = age^2,
eps = rnorm(n=n_target, mean=0, sd=.05),
W = rbinom(n=n_target, size=1, prob=.5))
}
#define random slopes for moderators in target sample
eps_inter_target <- matrix(nrow=n_target, ncol=length(covars_rand))
eps_inter_target
colnames(eps_inter_target) <- paste0("eps_",covars_rand)
for (i in 1:length(covars_rand)) {
eps_inter_target[,i] <- rnorm(n=n_target, mean=0, sd=eps_study_inter[i])
}
head(eps_inter_target)
#add error terms to target sample
target_dat <- target_dat %>%
mutate(eps_m = rnorm(n=n_target, mean=0, sd=eps_study_m),
eps_tau = rnorm(n=n_target, mean=0, sd=eps_study_tau)) %>%
bind_cols(eps_inter_target)
head(target_dat)
#standardize variables
train_dat <- train_dat %>%
mutate(age = (age - mean(age))/sd(age),
madrs = (madrs - mean(madrs))/sd(madrs),
weight = (weight - mean(weight))/sd(weight),
age2 = (age2 - mean(age2))/sd(age2))
target_dat <- target_dat %>%
mutate(age = (age - mean(age))/sd(age),
madrs = (madrs - mean(madrs))/sd(madrs),
weight = (weight - mean(weight))/sd(weight),
age2 = (age2 - mean(age2))/sd(age2))
# set up parameters
K <- 10
n_mean <- 500
n_sd <- 0
n_target <- 100
honesty <- T
covars <- list(list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(covars)),
distribution = c("same", "varying_madrs", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
View(settings)
moderators
covars
covars <- list(list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=T,
eps_study_m=1, eps_study_tau=1, eps_study_inter=0.5),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age2", "sex"), covars_rand=c("age2"),
lin=T, eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=0.05, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age", lin=F,
eps_study_m=1, eps_study_tau=0.5, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(covars)),
distribution = c("same", "varying_madrs", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
covars
knitr::opts_chunk$set(echo = TRUE)
all <- readRDS("Data/all_results_30Aug2023.RDS")
mean_sd <- function(x) {
return(paste(mean(x), sd(x), sep=" "))
}
#average across iterations
all_avg <- all %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:default_a_res, ~ mean_sd(.x)),
n_iter = n())
summary(all_avg$n_iter) #check iterations
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=manual_res:default_a_res,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_inter, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("manual", Method)==T, "MA", ifelse(
grepl("_a_", Method)==T, "Adaptive", "Honest")),
model = case_when(grepl("manual", Method)==T ~ "Meta-Analysis",
grepl("mem", Method)==T ~ "CF w/ Membership",
grepl("rand", Method)==T ~ "CF Random",
grepl("default", Method)==T ~ "CF Default"))
names(all)
#average across iterations
all_avg <- all %>%
select(-mem_res, default_res, mem_a_res, default_a_res) %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:rand_a_res, ~ mean_sd(.x)),
n_iter = n())
#average across iterations
all_avg <- all %>%
dplyr::select(-mem_res, default_res, mem_a_res, default_a_res) %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:rand_a_res, ~ mean_sd(.x)),
n_iter = n())
head(all_avg)
View(all_avg)
View(all)
all_long <- all %>%
dplyr::select(-mem_res, default_res, mem_a_res, default_a_res) %>%
pivot_longer(cols = manual_res:rand_a_res,
names_to = "Method",
values_to = "Value")
View(all_long)
19208*4
19208*5
all_long <- all %>%
dplyr::select(-c(mem_res, default_res, mem_a_res, default_a_res)) %>%
pivot_longer(cols = manual_res:rand_a_res,
names_to = "Method",
values_to = "Value")
typeof(all_long$Value)
summary(all_long$Value)
summarise(across(manual_res:rand_a_res, list(mean = mean, sd = sd),
dplyr::select(-mem_res, default_res, mem_a_res, default_a_res) %>%
#average across iterations
all_avg <- all %>%
#average across iterations
all_avg <- all %>%
dplyr::select(-mem_res, default_res, mem_a_res, default_a_res) %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:rand_a_res, list(mean = mean, sd = sd)),
n_iter = n())
#average across iterations
all_avg <- all %>%
dplyr::select(-mem_res, default_res, mem_a_res, default_a_res) %>%
group_by(Metric, K, n_mean, n_sd, n_target, covars_fix, covars_rand,
lin, eps_study_m, eps_study_tau, eps_study_inter,
distribution, target_dist) %>%
summarise(across(manual_res:rand_a_res, list(mean = mean, sd = sd)),
n_iter = n())
View(all_avg)
summary(all_avg$n_iter) #check iterations
View(filter(all_long, Metric=="target_coverage"))
View(filter(all_avg, Metric=="target_coverage"))
View(filter(all_avg, Metric=="target_coverage", covars_fix == "age", covars_rand == "age", lin == T))
sum(all$covars_fix == "age, madrs")
#long form for boxplot
all_long <- all %>%
dplyr::select(-c(mem_res, default_res, mem_a_res, default_a_res)) %>%
pivot_longer(cols = manual_res:rand_a_res,
names_to = "Method",
values_to = "Value") %>%
mutate(scenario = paste(covars_fix, covars_rand, lin, eps_study_m,
eps_study_tau, eps_study_inter))
#long form for boxplot
all_long <- all %>%
dplyr::select(-c(mem_res, default_res, mem_a_res, default_a_res)) %>%
pivot_longer(cols = manual_res:rand_a_res,
names_to = "Method",
values_to = "Value") %>%
mutate(scenario = paste(covars_fix, covars_rand, lin, eps_study_m,
eps_study_tau, eps_study_inter, sep = "_"))
unique(all_long$scenario)
#long form for boxplot
all_long <- all %>%
dplyr::select(-c(mem_res, default_res, mem_a_res, default_a_res)) %>%
pivot_longer(cols = manual_res:rand_a_res,
names_to = "Method",
values_to = "Value") %>%
mutate(scenario = paste(covars_fix, covars_rand, lin, eps_study_m,
eps_study_tau, eps_study_inter, sep = "_"),
sds = paste(eps_study_m, eps_study_tau, eps_study_inter, sep = "_"))
head(all_long)
#boxplot
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot() +
facet_wrap(~distribution, scales='free') +
#scale_y_continuous(limits = c(0, 2.1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot() +
facet_wrap(~distribution, scales='free') +
#scale_y_continuous(limits = c(0, 2.1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(~distribution, scales='free') +
#scale_y_continuous(limits = c(0, 2.1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(~distribution) +
#scale_y_continuous(limits = c(0, 2.1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(75, 100)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
lin == T, target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_wrap(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age",
target_dist == "different") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_coverage", covars_fix == "age2, sex",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12))
all_long %>%
filter(Metric == "target_length",
target_dist == "same",
eps_study_m == 1) %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("Mean CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
scale_y_continuous(labels = scales::percent, limits = c(.75, 1)) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
facet_grid(lin~distribution) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
all_long %>%
filter(Metric == "target_length", covars_fix == "age",
target_dist == "same") %>%
ggplot(aes(x=sds, y=Value)) +
geom_boxplot(aes(color = Method)) +
ylim(0, 10) +
facet_grid(lin~distribution) +
labs(color="Single-Study Method") + xlab("Aggregation Method") +
theme(axis.text.x = element_text(angle=90),
text = element_text(size=12)) +
xlab("Variability of Main, Trt, and Trt*Age Coefficients") +
ylab("CI Length in Target Sample") +
ggtitle("Same Target Distribution")
setwd("~/Dropbox/Moderation/Out of Sample Prediction/Notes/BART paper/data")
set.seed(3847293)
library(MatchIt)
############# first load the data
load("example.data")
covs.cont=c("bw","momage","nnhealth","birth.o","parity","moreprem","cigs","alcohol","ppvt.imp")
covs.cat=c("bwg","female","mlt.birt","b.marry","livwho","language","whenpren","drugs","othstudy","mom.lths","mom.hs","mom.coll","mom.scoll","site1","site2","site3","site4","site5","site6","site7","site8","momblack","momhisp","momwhite","workdur.imp")
covs=c(covs.cont,covs.cat)
ncovs=length(covs)
usek = na.omit(ihdp[!(ihdp$treat==1 & ihdp$dose400==0),c("iqsb.36","dose400",covs)])
xt=as.matrix(usek[,-1])
xp=as.matrix(usek[usek$dose400==1,-1])
xp[,1]=0
y=as.numeric(usek[,1])
library(BayesTree)
bart.tot <- bart(x.train=xt,   y.train=y,  x.test=xp)
# check convergence
plot(bart.tot$sigma)
#### results
# first just effect of treatment on treated
diffs=bart.tot$yhat.train[,usek$dose400==1]-bart.tot$yhat.test
View(diffs)
mndiffs=apply(diffs,1,mean)
mndiffs
apply(diffs,2,mean)
View(bart.tot$yhat.train[,usek$dose400==1])
a <- bart.tot$yhat.train[,usek$dose400==1][,1]
a
b <- bart.tot$yhat.test
b
b <- bart.tot$yhat.test[,1]
b
mean(a)-mean(b)
mean(a-b)
for (i in 1:67) {
a <- bart.tot$yhat.train[,usek$dose400==1][,i]
b <- bart.tot$yhat.test[,i]
print(mean(a)-mean(b)==mean(a-b))}
for (i in 1:67) {
a <- bart.tot$yhat.train[,usek$dose400==1][,i]
b <- bart.tot$yhat.test[,i]
print(mean(a)-mean(b)-mean(a-b)<10e-3)}
for (i in 1:67) {
a <- bart.tot$yhat.train[,usek$dose400==1][,i]
b <- bart.tot$yhat.test[,i]
print(mean(a)-mean(b)-mean(a-b)<10e-5)}
for (i in 1:67) {
a <- bart.tot$yhat.train[,usek$dose400==1][,i]
b <- bart.tot$yhat.test[,i]
print(mean(a)-mean(b)-mean(a-b)<10e-7)}
pnorm(10e6)
qnorm(10e6)
qnorm(100)
qnorm(10)
qnorm(8)
qnorm(1)
pnorm(-10000)
pnorm(-1000)
pnorm(-100)
pnorm(-10)
1/sqrt(2*3.14159)*exp(-1^2/2)
library(tidyverse)
library(BayesTree)
library(dbarts)
source("R/MDD_Generation_OOSEst.R")
setwd("~/Dropbox/Moderation/Out of Sample Prediction")
source("R/MDD_Generation_OOSEst.R")
source("R/MA_OOSEst.R")
source("R/Bootstrap_OOSEst.R")
source("R/Comparing_OOSEst.R")
#generate dataset using defaults
sim_dat <- gen_mdd(K=5, n_mean=100)
train_dat <- sim_dat[["train_dat"]]
target_dat <- sim_dat[["target_dat"]]
#define covariates (ignore age^2 for now)
covars=c("sex","smstat","weight","age","madrs")  #how to treat S as categorical?
ncovars=length(covars)
feat_trt <- dplyr::select(train_dat, c(W, S, all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
xt <- as.matrix(feat_trt)
xp <- feat_trt %>%
mutate(W = ifelse(W == 1, 0, 1)) %>% #swap control and treatment for test data
as.matrix()
y <- as.numeric(train_dat$Y)
#run bart
set.seed(2)
bart.tot <- dbarts::bart(x.train=xt,   y.train=y,  x.test=xp, keeptrees=T)
#check convergence
plot(bart.tot$sigma)
#results
#cates
diffs <- bart.tot$yhat.train-bart.tot$yhat.test
diffs
dim(diffs)
which(feat_trt$W==1)
#results
#calculate differences across all posterior draws
diffs <- bart.tot$yhat.train-bart.tot$yhat.test
dim(diffs)
#results
#calculate differences across all posterior draws
diffs <- bart.tot$yhat.train-bart.tot$yhat.test
#negate the differences for when the training data was in the control group
diffs[,which(feat_trt$W==0)] <- -diffs[,which(feat_trt$W==0)]
dim(diffs)
# get a sense of t.e. heterogeneity
hist(apply(diffs,2,mean))
res <- train_dat %>%
mutate(yhat_train = bart.tot$yhat.train.mean,
yhat_test = bart.tot$yhat.test.mean,
diff = ifelse(W == 1, yhat_train - yhat_test,
yhat_test - yhat_train))
#get a sense of t.e. heterogeneity
hist(res$diff)
#plot means
hist(apply(diffs, 2, mean))
apply(diffs, 2, quantile(.05))
?quantile
apply(diffs, 2, quantile(probs=.05))
?lapply
apply(diffs, 2, quantile, probs=.05)
#calculate intervals
res <- train_dat %>%
mutate(mean = apply(diffs, 2, mean),
lower = apply(diffs, 2, quantile, probs=0.025),
upper = apply(diffs, 2, quantile, probs=0.975))
View(res)
sum(res$tau >= res$lower & res$tau <= res$upper)
sum(res$tau >= res$lower & res$tau <= res$upper)/nrow(res)
