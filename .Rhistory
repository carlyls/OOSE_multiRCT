pred_upper <- mean_theta - qt(.025, K-2)*sqrt(var_theta)
pred_l2 <- mean_theta + qt(.025, K-2)*sqrt(var_theta_uhat)
pred_u2 <- mean_theta - qt(.025, K-2)*sqrt(var_theta_uhat)
df <- df %>%
mutate(lower = pred_lower,
l2 = pred_l2,
mean = mean_theta,
upper = pred_upper,
u2 = pred_u2)
View(df)
pred_lower
head(pred_lower)
cor(df$lower, df$l2)
cor(df$upper, df$u2)
mean(df$lower-df$l2)
mean(df$upper-df$u2)
sum(df$tau >= df$lower & df$tau <= df$upper)
sum(df$tau >= df$l2 & df$tau <= df$u2)
v_uhat[,,1][2:2,2:2]
df <- train_dat
res <- matrix_var(mod)
res
#get variances
#res <- matrix_var(mod)
beta <- res$beta
var_beta <- res$var_beta
u <- res$u
#var_rand <- res$var_rand
v_uhat <- res$v_uhat
df <- train_dat
#calculate theta-hats
X <- df %>%
dplyr::select(W, all_of(covars_fix)) %>%
mutate(W = 1) %>%
as.matrix()
Z <- df %>%
dplyr::select(W, all_of(covars_rand)) %>%
mutate(W = 1) %>%
as.matrix()
head(X)
head(Z)
Zlist <- list()
for (s in 1:K) {
Z_S <- Z[df$S==s,]
Zlist[[s]] <- Z_S
}
Z <- do.call("bdiag", Zlist) %>% as.matrix()
head(Z)
var_uhat_train <- list()
for (i in 1:K) {
var_uhat_train[[i]] <- v_uhat[,,i][2:ncol(v_uhat[,,i]),2:ncol(v_uhat[,,i])]
}
var_uhat <- do.call("bdiag", var_uhat_train) %>% as.matrix()
head(var_uhat)
v_uhat
mean_theta <- X %*% beta + Z %*% u %>% c()
vcov_theta <- X %*% var_beta %*% t(X) + Z %*% var_uhat %*% t(Z)
var_theta <- diag(vcov_theta) #Var(theta-hat)
#prediction interval
pred_lower <- mean_theta + qt(.025, K-2)*sqrt(var_theta)
pred_upper <- mean_theta - qt(.025, K-2)*sqrt(var_theta)
df <- df %>%
mutate(lower = pred_lower,
mean = mean_theta,
upper = pred_upper)
View(df)
sum(df$tau >= df$lower & df$tau <= df$upper)
df <- target_dat
head(df)
#get variances
#res <- matrix_var(mod)
beta <- res$beta
var_beta <- res$var_beta
u <- res$u
var_rand <- res$var_rand
var_rand
#calculate theta-hats
X <- df %>%
dplyr::select(W, all_of(covars_fix)) %>%
mutate(W = 1) %>%
as.matrix()
Z <- df %>%
dplyr::select(W, all_of(covars_rand)) %>%
mutate(W = 1) %>%
as.matrix()
mean_theta <- X %*% beta %>% c() #theta-hat
head(Z)
vcov_theta <- X %*% var_beta %*% t(X) + Z %*% var_rand %*% t(Z)
var_theta <- diag(vcov_theta) #Var(theta-hat)
#prediction interval
pred_lower <- mean_theta + qt(.025, K-2)*sqrt(var_theta)
pred_upper <- mean_theta - qt(.025, K-2)*sqrt(var_theta)
df <- df %>%
mutate(lower = pred_lower,
mean = mean_theta,
upper = pred_upper)
View(df)
sum(df$tau >= df$lower & df$tau <= df$upper)
#incorrect
formula_wrong <- as.formula(paste0("Y ~ madrs + sex + age + W + ",
paste("W", covars_fix, sep=":", collapse=" + "),
" + (W | S)"))
mod_wrong <- lmer(formula_wrong, data=train_dat,
control=lmerControl(optimizer="bobyqa", optCtrl=list(maxfun=10000)))
sum_wrong <- summary(mod_wrong)
#manual PI - incorrectly specified
res_wrong <- matrix_var(res_wrong)
#prediction interval by hand ####
#get variance components of model
matrix_var <- function(mod) {
#calculate variances
fc <- vcov(mod) #covariance matrix of fixed effects
rc <- Matrix::bdiag(VarCorr(mod)) #variance and covariances of random effects
#fixed effects
beta <- fixef(mod)[grep("W", names(fixef(mod)))] %>% matrix() #beta-hat
var_beta <- fc[grep("W", rownames(fc)),
grep("W", colnames(fc))] #Var(beta-hat)
#random effects
u <- ranef(mod)$S[grep("W", colnames(ranef(mod)$S))] %>% t() %>% matrix()
var_rand <- rc[grep("W", rownames(rc)),
grep("W", colnames(rc))]
v_uhat <- attr(ranef(mod, condVar = TRUE)[[1]], "postVar")
return(list(beta=beta, var_beta=var_beta, u=u, var_rand=var_rand, v_uhat=v_uhat))
}
#add pis to dataset
manual_pi_train <- function(df, res, K, covars_fix, covars_rand) {
#get variances
#res <- matrix_var(mod)
beta <- res$beta
var_beta <- res$var_beta
u <- res$u
#var_rand <- res$var_rand
v_uhat <- res$v_uhat
#calculate theta-hats
X <- df %>%
dplyr::select(W, all_of(covars_fix)) %>%
mutate(W = 1) %>%
as.matrix()
Z <- df %>%
dplyr::select(W, all_of(covars_rand)) %>%
mutate(W = 1) %>%
as.matrix()
Zlist <- list()
for (s in 1:K) {
Z_S <- Z[df$S==s,]
Zlist[[s]] <- Z_S
}
Z <- do.call("bdiag", Zlist) %>% as.matrix()
var_uhat_train <- list()
for (i in 1:K) {
var_uhat_train[[i]] <- v_uhat[,,i][2:ncol(v_uhat[,,i]),2:ncol(v_uhat[,,i])]
}
var_uhat <- do.call("bdiag", var_uhat_train) %>% as.matrix()
mean_theta <- X %*% beta + Z %*% u %>% c()
vcov_theta <- X %*% var_beta %*% t(X) + Z %*% var_uhat %*% t(Z)
var_theta <- diag(vcov_theta) #Var(theta-hat)
#prediction interval
pred_lower <- mean_theta + qt(.025, K-2)*sqrt(var_theta)
pred_upper <- mean_theta - qt(.025, K-2)*sqrt(var_theta)
df <- df %>%
mutate(lower = pred_lower,
mean = mean_theta,
upper = pred_upper)
return(df)
}
manual_pi_target <- function(df, res, K, covars_fix, covars_rand) {
#get variances
#res <- matrix_var(mod)
beta <- res$beta
var_beta <- res$var_beta
u <- res$u
var_rand <- res$var_rand
#v_uhat <- res$v_uhat
#calculate theta-hats
X <- df %>%
dplyr::select(W, all_of(covars_fix)) %>%
mutate(W = 1) %>%
as.matrix()
Z <- df %>%
dplyr::select(W, all_of(covars_rand)) %>%
mutate(W = 1) %>%
as.matrix()
mean_theta <- X %*% beta %>% c() #theta-hat
vcov_theta <- X %*% var_beta %*% t(X) + Z %*% var_rand %*% t(Z)
var_theta <- diag(vcov_theta) #Var(theta-hat)
#prediction interval
pred_lower <- mean_theta + qt(.025, K-2)*sqrt(var_theta)
pred_upper <- mean_theta - qt(.025, K-2)*sqrt(var_theta)
df <- df %>%
mutate(lower = pred_lower,
mean = mean_theta,
upper = pred_upper)
return(df)
}
#manual PI - incorrectly specified
res_wrong <- matrix_var(mod_wrong)
manual_train_wrong <- manual_pi_train(train_dat, res_wrong, K, covars_fix, c())
manual_target_wrong <- manual_pi_target(target_dat, res_wrong, K, covars_fix, c())
manual_res_wrong <- assess_interval(manual_train_wrong, manual_target_wrong)
manual_res_wrong
#manual PI
res <- matrix_var(mod)
manual_train <- manual_pi_train(train_dat, res, K, covars_fix, covars_rand)
manual_target <- manual_pi_target(target_dat, res, K, covars_fix, covars_rand)
manual_res <- assess_interval(manual_train, manual_target)
manual_res
library(tidyverse)
library(lme4)
library(rsample)
library(multcomp)
library(MASS)
source("R/MDD_Generation_OOSEst.R")
source("R/MA_OOSEst.R")
# set up parameters
K <- 10
n_mean <- 500
n_sd <- 0
n_target <- 100
covars <- list(list(covars_fix="age", covars_rand="age",
eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age",
eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age",
eps_study_tau=1, eps_study_inter=0.05),
list(covars_fix="age", covars_rand="age",
eps_study_tau=0.5, eps_study_inter=0.5),
list(covars_fix="age", covars_rand="age",
eps_study_tau=1, eps_study_inter=1),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
eps_study_tau=0.5, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "madrs"), covars_rand=c("age", "madrs"),
eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age", "sex"), covars_rand=c("age", "sex"),
eps_study_tau=0.05, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "sex"), covars_rand=c("age", "sex"),
eps_study_tau=0.5, eps_study_inter=c(0.05,0.05)),
list(covars_fix=c("age", "sex"), covars_rand=c("age", "sex"),
eps_study_tau=0.5, eps_study_inter=c(0.5,0.05)),
list(covars_fix=c("age", "sex"), covars_rand=c("age"),
eps_study_tau=0.05, eps_study_inter=0.05),
list(covars_fix=c("age", "sex"), covars_rand=c("age"),
eps_study_tau=0.5, eps_study_inter=0.05),
list(covars_fix=c("age", "sex"), covars_rand=c("age"),
eps_study_tau=0.5, eps_study_inter=0.5))
settings <- expand.grid(moderators = c(1:length(covars)),
eps_study_m = c(0.05, 1),
distribution = c("same", "varying_madrs", "halfdiff_madrsage", "separate_age"),
target_dist = c("same", "different"),
iteration = c(1:100))
View(settings)
moderators
covars
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
all <- readRDS("Data/all_results_12Apr2023.RDS")
mean_sd <- function(x) {
return(paste(mean(x), sd(x), sep=" "))
}
#average across iterations
all_avg <- all %>%
group_by(Metric, K, n_mean, n_sd, n_target, eps_study_m,
eps_study_tau, eps_study_age, distribution, target_dist) %>%
summarise(across(glht_res:boot_res_wrong, ~ mean_sd(.x)),
n_iter = n())
summary(all_avg$n_iter) #check iterations
#long format for plotting
all_long <- all_avg %>%
pivot_longer(cols=glht_res:boot_res_wrong,
names_to="Method",
values_to="Value") %>%
separate(Value, into=c("Mean", "SD"), sep=" ") %>%
mutate_at(c("Mean", "SD"), as.numeric) %>%
mutate(eps = factor(paste(eps_study_tau, eps_study_age, sep="_")),
eps_study_m = factor(eps_study_m),
spec = ifelse(grepl("wrong", Method)==T, "Incorrectly Specified", "Correctly Specified"),
model = ifelse(grepl("glht", Method)==T, "GLHT",
ifelse(grepl("manual", Method)==T, "Manual", "Boot")))
#plot target coverage
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
#removing GLHT
#same target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "same",
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Same Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_coverage",
target_dist == "different",
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
#same and different target dist on one plot
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Different Target Distribution")
#same and different target dist on one plot
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Low Variability of Intercept")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 1,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("High Variability of Intercept")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Low Variability of Intercept")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 1,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("High Variability of Intercept")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Low Variability of Intercept") +
labs(color="Meta-Analysis", size="Method")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Low Variability of Intercept") +
labs(color="Meta-Analysis", shape="Method")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 1,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("High Variability of Intercept")  +
labs(color="Meta-Analysis", shape="Method")
ggsave("res_highvar_27Apr2023.jpeg")
all_long %>%
filter(Metric == "target_coverage",
eps_study_m == 0.05,
model != "GLHT") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~target_dist) +
scale_y_continuous(labels = scales::percent) +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("CI Coverage Percent in Target Sample") +
ggtitle("Low Variability of Intercept") +
labs(color="Meta-Analysis", shape="Method")
ggsave("res_lowvar_27Apr2023.jpeg")
#plot target mse
#same target dist
all_long %>%
filter(Metric == "target_mse",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_mse",
target_dist == "different") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Different Target Distribution")
all_long %>%
filter(Metric == "target_mse",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Same Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_mse",
target_dist == "different") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("MSE in Target Sample") +
ggtitle("Different Target Distribution")
all_long %>%
filter(Metric == "target_length",
target_dist == "same") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("Mean CI Length in Target Sample") +
ggtitle("Same Target Distribution")
#different target dist
all_long %>%
filter(Metric == "target_length",
target_dist == "different") %>%
ggplot(aes(x=eps, y=Mean, group=Method, color=spec)) +
geom_jitter(aes(shape=model), size=2.5, width=.2, height=0) +
facet_grid(distribution~eps_study_m, scales='free') +
theme(axis.text.x = element_text(angle = 90)) +
xlab("Variability of Trt and Trt*Age Coefficients") +
ylab("Mean CI Length in Target Sample") +
ggtitle("Different Target Distribution")
